# Common configuration shared across all profiles
spring:
  profiles:
    active: dev  # Default profile is development

  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/OAuthTemplate?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:dummy-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:dummy-client-secret}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
    rate-limiting:
      enabled: true
      default-limit: 100        # General API requests per minute per IP
      auth-limit: 100           # Authentication endpoints per minute per IP
      sensitive-limit: 3        # Sensitive operations per minute per IP
      block-duration-minutes: 30
      max-failed-attempts: 5
  

server:
  port: ${SERVER_PORT:8080}
  forward-headers-strategy: framework

# Common application settings (no environment-specific secrets here)
app:
  security:
    jwt:
      secret: ${JWT_SECRET:defaultsecretkey12345678901234567890}
      expiration: 3600000         # 1 hour
    refresh:
      expiration: 604800000       # 7 days
    verification:
      expirationHours: 24
    passwordReset:
      expirationHours: 1
    cookie:
      secure: false               # overridden in prod
      sameSite: Lax               # normalized case
  profile:
    max-bio-length: 500
    default-theme: SYSTEM
    upload-dir: ${UPLOAD_DIR:uploads/profiles}

  # Presentation-only email fields (transport creds live in profile YAML via spring.mail.*)
  email:
    fromAddress: ${EMAIL_FROM_ADDRESS:no-reply@example.com}
    fromName: ${EMAIL_FROM_NAME:OAuth Template App}

  application:
    baseUrl: ${APP_BASE_URL:http://localhost:3000}
    supportEmail: ${SUPPORT_EMAIL:support@example.com}
    name: ${APP_NAME:OAuth Template}
    verifyBaseUrl: ${VERIFY_BASE_URL:http://localhost:8080}

  cors:
    allowed-origins:            # normalized to kebab-case to match your CorsConfig binding
      - ${FRONTEND_URL:http://localhost:3000}

  frontend-url: ${FRONTEND_URL:http://localhost:3000}
  login-success-redirect-url: ${LOGIN_SUCCESS_REDIRECT_URL:/home}
  admin-emails: ${ADMIN_EMAILS:admin@example.com}

# Springdoc configuration
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    csrf:
      enabled: true
    try-it-out-enabled: true
    filter: true
    syntax-highlight:
      activated: true
    deepLinking: true
  api-docs:
    path: /api-docs
    groups:
      enabled: true
  show-actuator: false
  packages-to-scan: com.template.OAuth.controller
  paths-to-match: /api/**, /auth/**, /refresh-token

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,env,mappings
      base-path: /management
      path-mapping:
        health: health
  endpoint:
    health:
      show-details: when_authorized
      show-components: when_authorized
      roles: ADMIN
    info:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    build:
      enabled: true
    git:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name:oauth-template}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
  prometheus:
    metrics:
      export:
        enabled: true

# Custom application info
info:
  application:
    name: ${APP_NAME:OAuth Template}
    description: OAuth 2.0 Authentication Service
    version: 0.0.1-SNAPSHOT
    environment: ${spring.profiles.active:dev}
