{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "pat",
        "prod"
      ],
      "metadata": {
        "description": "Environment type (dev, pat, prod)"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat('oauth-asp-', parameters('environment'))]",
      "metadata": {
        "description": "Name of the App Service Plan"
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[concat('oauth-app-', parameters('environment'), '-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Web App"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1v2",
        "P2v2",
        "P3v2"
      ],
      "metadata": {
        "description": "The SKU of App Service Plan"
      }
    },
    "capacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "The number of instances for the App Service Plan"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "[concat('oauthcr', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Container Registry"
      }
    },
    "mysqlServerName": {
      "type": "string",
      "defaultValue": "[concat('oauth-mysql-', parameters('environment'), '-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "MySQL server name"
      }
    },
    "mysqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat('OAuthTemplate_', toUpper(parameters('environment')))]",
      "metadata": {
        "description": "MySQL database name"
      }
    },
    "mysqlAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "MySQL admin username"
      }
    },
    "mysqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "MySQL admin password"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('oauthstorage', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Storage account name for file uploads and backups"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[concat('oauth-insights-', parameters('environment'))]",
      "metadata": {
        "description": "Application Insights name"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[concat('oauth-kv-', parameters('environment'), '-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Key Vault name"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "application": "oauth-template",
        "environment": "[parameters('environment')]"
      },
      "metadata": {
        "description": "Tags for the Azure resources"
      }
    }
  },
  "variables": {
    "mysqlSkuName": {
      "dev": "B_Gen5_1",
      "pat": "GP_Gen5_2",
      "prod": "GP_Gen5_4"
    },
    "mysqlSkuTier": {
      "dev": "Basic",
      "pat": "GeneralPurpose",
      "prod": "GeneralPurpose"
    },
    "appServicePlanSkuName": "[parameters('skuName')]",
    "appServicePlanSkuTier": {
      "B1": "Basic",
      "B2": "Basic",
      "B3": "Basic",
      "S1": "Standard",
      "S2": "Standard",
      "S3": "Standard",
      "P1v2": "PremiumV2",
      "P2v2": "PremiumV2",
      "P3v2": "PremiumV2"
    },
    "storageAccountSkuName": {
      "dev": "Standard_LRS",
      "pat": "Standard_GRS",
      "prod": "Standard_GRS"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[variables('appServicePlanSkuName')]",
        "tier": "[variables('appServicePlanSkuTier')[parameters('skuName')]]",
        "capacity": "[parameters('capacity')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "name": "[parameters('webAppName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "kind": "app,linux,container",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "DOCKER|nginx",
          "alwaysOn": true,
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[concat('https://', reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))).loginServer)]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2020-11-01-preview').username]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2020-11-01-preview').passwords[0].value]"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "SPRING_PROFILES_ACTIVE",
              "value": "[parameters('environment')]"
            },
            {
              "name": "DB_URL",
              "value": "[concat('jdbc:mysql://', reference(resourceId('Microsoft.DBforMySQL/servers', parameters('mysqlServerName'))).fullyQualifiedDomainName, ':3306/', parameters('mysqlDatabaseName'), '?useSSL=true&serverTimezone=UTC')]"
            },
            {
              "name": "DB_USERNAME",
              "value": "[concat(parameters('mysqlAdminUsername'), '@', parameters('mysqlServerName'))]"
            },
            {
              "name": "DB_PASSWORD",
              "value": "[parameters('mysqlAdminPassword')]"
            },
            {
              "name": "STORAGE_CONNECTION_STRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
          ]
        },
        "httpsOnly": true
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2020-11-01-preview",
      "name": "[parameters('containerRegistryName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.DBforMySQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[parameters('mysqlServerName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[variables('mysqlSkuName')[parameters('environment')]]",
        "tier": "[variables('mysqlSkuTier')[parameters('environment')]]",
        "capacity": 1,
        "family": "Gen5"
      },
      "properties": {
        "createMode": "Default",
        "version": "8.0",
        "administratorLogin": "[parameters('mysqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('mysqlAdminPassword')]",
        "storageProfile": {
          "storageMB": 5120,
          "backupRetentionDays": "[if(equals(parameters('environment'), 'prod'), 35, 7)]",
          "geoRedundantBackup": "[if(equals(parameters('environment'), 'prod'), 'Enabled', 'Disabled')]"
        },
        "sslEnforcement": "Enabled"
      },
      "resources": [
        {
          "type": "databases",
          "apiVersion": "2017-12-01",
          "name": "[parameters('mysqlDatabaseName')]",
          "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/servers', parameters('mysqlServerName'))]"
          ],
          "properties": {
            "charset": "utf8",
            "collation": "utf8_general_ci"
          }
        },
        {
          "type": "firewallRules",
          "apiVersion": "2017-12-01",
          "name": "AllowAzureServices",
          "dependsOn": [
            "[resourceId('Microsoft.DBforMySQL/servers', parameters('mysqlServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[variables('storageAccountSkuName')[parameters('environment')]]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat('default/uploads')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
          ]
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat('default/backups')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest",
        "RetentionInDays": 90,
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tags')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2020-12-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ]
    }
  ],
  "outputs": {
    "webAppName": {
      "type": "string",
      "value": "[parameters('webAppName')]"
    },
    "webAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).defaultHostName)]"
    },
    "mysqlServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DBforMySQL/servers', parameters('mysqlServerName'))).fullyQualifiedDomainName]"
    },
    "containerRegistryUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))).loginServer]"
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))).vaultUri]"
    }
  }
}