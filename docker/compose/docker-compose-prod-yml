version: '3.8'

services:
  app:
    environment:
      - JAVA_OPTS=-Xms1g -Xmx2g -XX:+UseG1GC -Dspring.profiles.active=prod
    restart: always
    deploy:
      resources:
        limits:
          memory: 2.5G
        reservations:
          memory: 1G
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    # Add TLS termination in production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth-api.rule=Host(`api.yourdomain.com`)"
      - "traefik.http.routers.oauth-api.entrypoints=websecure"
      - "traefik.http.routers.oauth-api.tls=true"
      - "traefik.http.routers.oauth-api.tls.certresolver=myresolver"

  db:
    restart: always
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    volumes:
      # Add backup volume for production
      - oauth-mysql-backups:/var/backups/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password --max-connections=200

  # Add a backup service for production
  backup:
    image: mysql:8.0
    container_name: oauth-backup-${SPRING_PROFILES_ACTIVE:-prod}
    restart: always
    depends_on:
      - db
    volumes:
      - oauth-mysql-backups:/backups
      - ../../docker/scripts/backup.sh:/backup.sh
    environment:
      - MYSQL_PWD=${DB_PASSWORD}
      - MYSQL_DATABASE=oauth_${SPRING_PROFILES_ACTIVE:-prod}
      - MYSQL_USER=${DB_USERNAME}
      - BACKUP_SCHEDULE=0 0 * * *  # Daily at midnight
    entrypoint: ["/bin/bash", "/backup.sh"]
    networks:
      - oauth-network-${SPRING_PROFILES_ACTIVE:-prod}

volumes:
  oauth-mysql-backups: